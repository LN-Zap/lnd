name: CI

on:
  push:
    branches:
      - "master"
  pull_request:
    branches:
      - "*"

defaults:
  run:
    shell: bash

env:
  # go needs absolute directories, using the $HOME variable doesn't work here.
  GOCACHE: /home/runner/work/go/pkg/build
  GOPATH: /home/runner/work/go
  BITCOIN_VERSION: "23.0"

  # If you change this value, please change it in the following files as well:
  # /.travis.yml
  # /Dockerfile
  # /dev.Dockerfile
  # /make/builder.Dockerfile
  # /.github/workflows/release.yml
  GO_VERSION: 1.19.3

  # Configure Go to prevent proxying the private repository.
  GOPRIVATE: "github.com/LN-Zap/btcwallet-strike"

jobs:
  ########################
  # RPC check
  ########################
  rpc-check:
    name: RPC check
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: git config --global url."https://zapci:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            lnd-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: run check
        run: make rpc-check

      - name: run JSON/WASM stub compilation check
        run: make rpc-js-compile

  ########################
  # lint code
  ########################
  lint:
    name: lint code
    runs-on: ubuntu-latest
    steps:
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: git config --global url."https://zapci:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: git checkout
        uses: actions/checkout@v2

      - name: Fetch all history for linter
        run: git fetch --prune --unshallow

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            lnd-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: lint
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: GOGC=50 make lint

  ########################
  # sample configuration check
  ########################
  sample-conf-check:
    name: sample configuration check
    runs-on: ubuntu-latest
    steps:
      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            lnd-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: check all command line flags exist in sample-lnd.conf file
        run: make sample-conf-check

  ########################
  # run unit tests
  ########################
  unit-test:
    name: run unit tests
    runs-on: ubuntu-latest
    strategy:
      # Allow other tests in the matrix to continue if one fails.
      fail-fast: false
      matrix:
        unit_type:
          - btcd unit-race
          - unit tags="kvdb_etcd"
          - unit tags="kvdb_postgres"
    steps:
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: git config --global url."https://zapci:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            lnd-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: install bitcoind
        run: ./scripts/install_bitcoind.sh

      - name: run ${{ matrix.unit_type }}
        run: make ${{ matrix.unit_type }}

  ########################
  # run integration tests
  ########################
  integration-test:
    name: run itests
    runs-on: ubuntu-latest
    strategy:
      # Allow other tests in the matrix to continue if one fails.
      fail-fast: false
      matrix:
        include:
          - name: btcd
            args: backend=btcd
    steps:
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: git config --global url."https://zapci:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: git checkout
        uses: actions/checkout@v2

      - name: go cache
        uses: actions/cache@v1
        with:
          path: /home/runner/work/go
          key: lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-${{ hashFiles('**/go.sum') }}
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-${{ github.job }}-
            lnd-${{ runner.os }}-go-${{ env.GO_VERSION }}-
            lnd-${{ runner.os }}-go-

      - name: setup go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v2
        with:
          go-version: "${{ env.GO_VERSION }}"

      - name: install bitcoind
        run: ./scripts/install_bitcoind.sh

      - name: run ${{ matrix.name }}
        run: make itest-parallel ${{ matrix.args }}

  ########################
  # check pinned dependencies
  ########################
  dep-pin:
    name: check pinned dependencies
    runs-on: ubuntu-latest
    strategy:
      # Allow other tests in the matrix to continue if one fails.
      fail-fast: false
      matrix:
        pinned_dep:
          - google.golang.org/grpc v1.38.0
          - github.com/golang/protobuf v1.5.2

    steps:
      - name: Configure git for private modules
        env:
          TOKEN: ${{ secrets.ZAP_CI_GITHUB_TOKEN }}
        run: git config --global url."https://zapci:${TOKEN}@github.com".insteadOf "https://github.com"

      - name: git checkout
        uses: actions/checkout@v2

      - name: ensure dependences at correct version
        run: if ! grep -q "${{ matrix.pinned_dep }}" go.mod; then echo dependency ${{ matrix.pinned_dep }} should not be altered ; exit 1 ; fi
