//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: signrpc/signer.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Signrpc_SignerSignOutputRawCall: ClientCallUnary {}

fileprivate final class Signrpc_SignerSignOutputRawCallBase: ClientCallUnaryBase<Signrpc_SignReq, Signrpc_SignResp>, Signrpc_SignerSignOutputRawCall {
  override class var method: String { return "/signrpc.Signer/SignOutputRaw" }
}

internal protocol Signrpc_SignerComputeInputScriptCall: ClientCallUnary {}

fileprivate final class Signrpc_SignerComputeInputScriptCallBase: ClientCallUnaryBase<Signrpc_SignReq, Signrpc_InputScriptResp>, Signrpc_SignerComputeInputScriptCall {
  override class var method: String { return "/signrpc.Signer/ComputeInputScript" }
}


/// Instantiate Signrpc_SignerServiceClient, then call methods of this protocol to make API calls.
internal protocol Signrpc_SignerService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func signOutputRaw(_ request: Signrpc_SignReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_SignResp?, CallResult) -> Void) throws -> Signrpc_SignerSignOutputRawCall

  /// Asynchronous. Unary.
  @discardableResult
  func computeInputScript(_ request: Signrpc_SignReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_InputScriptResp?, CallResult) -> Void) throws -> Signrpc_SignerComputeInputScriptCall

}

internal extension Signrpc_SignerService {
  /// Asynchronous. Unary.
  @discardableResult
  func signOutputRaw(_ request: Signrpc_SignReq, completion: @escaping (Signrpc_SignResp?, CallResult) -> Void) throws -> Signrpc_SignerSignOutputRawCall {
    return try self.signOutputRaw(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func computeInputScript(_ request: Signrpc_SignReq, completion: @escaping (Signrpc_InputScriptResp?, CallResult) -> Void) throws -> Signrpc_SignerComputeInputScriptCall {
    return try self.computeInputScript(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Signrpc_SignerServiceClient: ServiceClientBase, Signrpc_SignerService {
  /// Asynchronous. Unary.
  @discardableResult
  internal func signOutputRaw(_ request: Signrpc_SignReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_SignResp?, CallResult) -> Void) throws -> Signrpc_SignerSignOutputRawCall {
    return try Signrpc_SignerSignOutputRawCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func computeInputScript(_ request: Signrpc_SignReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_InputScriptResp?, CallResult) -> Void) throws -> Signrpc_SignerComputeInputScriptCall {
    return try Signrpc_SignerComputeInputScriptCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

