//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: invoicesrpc/invoices.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Invoicesrpc_InvoicesSubscribeSingleInvoiceCall: ClientCallServerStreaming {
  /// Do not call this directly, call `receive()` in the protocol extension below instead.
  func _receive(timeout: DispatchTime) throws -> Lnrpc_Invoice?
  /// Call this to wait for a result. Nonblocking.
  func receive(completion: @escaping (ResultOrRPCError<Lnrpc_Invoice?>) -> Void) throws
}

internal extension Invoicesrpc_InvoicesSubscribeSingleInvoiceCall {
  /// Call this to wait for a result. Blocking.
  func receive(timeout: DispatchTime = .distantFuture) throws -> Lnrpc_Invoice? { return try self._receive(timeout: timeout) }
}

fileprivate final class Invoicesrpc_InvoicesSubscribeSingleInvoiceCallBase: ClientCallServerStreamingBase<Invoicesrpc_SubscribeSingleInvoiceRequest, Lnrpc_Invoice>, Invoicesrpc_InvoicesSubscribeSingleInvoiceCall {
  override class var method: String { return "/invoicesrpc.Invoices/SubscribeSingleInvoice" }
}

internal protocol Invoicesrpc_InvoicesCancelInvoiceCall: ClientCallUnary {}

fileprivate final class Invoicesrpc_InvoicesCancelInvoiceCallBase: ClientCallUnaryBase<Invoicesrpc_CancelInvoiceMsg, Invoicesrpc_CancelInvoiceResp>, Invoicesrpc_InvoicesCancelInvoiceCall {
  override class var method: String { return "/invoicesrpc.Invoices/CancelInvoice" }
}

internal protocol Invoicesrpc_InvoicesAddHoldInvoiceCall: ClientCallUnary {}

fileprivate final class Invoicesrpc_InvoicesAddHoldInvoiceCallBase: ClientCallUnaryBase<Invoicesrpc_AddHoldInvoiceRequest, Invoicesrpc_AddHoldInvoiceResp>, Invoicesrpc_InvoicesAddHoldInvoiceCall {
  override class var method: String { return "/invoicesrpc.Invoices/AddHoldInvoice" }
}

internal protocol Invoicesrpc_InvoicesSettleInvoiceCall: ClientCallUnary {}

fileprivate final class Invoicesrpc_InvoicesSettleInvoiceCallBase: ClientCallUnaryBase<Invoicesrpc_SettleInvoiceMsg, Invoicesrpc_SettleInvoiceResp>, Invoicesrpc_InvoicesSettleInvoiceCall {
  override class var method: String { return "/invoicesrpc.Invoices/SettleInvoice" }
}


/// Instantiate Invoicesrpc_InvoicesServiceClient, then call methods of this protocol to make API calls.
internal protocol Invoicesrpc_InvoicesService: ServiceClient {
  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  func subscribeSingleInvoice(_ request: Invoicesrpc_SubscribeSingleInvoiceRequest, metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> Invoicesrpc_InvoicesSubscribeSingleInvoiceCall

  /// Asynchronous. Unary.
  @discardableResult
  func cancelInvoice(_ request: Invoicesrpc_CancelInvoiceMsg, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_CancelInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesCancelInvoiceCall

  /// Asynchronous. Unary.
  @discardableResult
  func addHoldInvoice(_ request: Invoicesrpc_AddHoldInvoiceRequest, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_AddHoldInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesAddHoldInvoiceCall

  /// Asynchronous. Unary.
  @discardableResult
  func settleInvoice(_ request: Invoicesrpc_SettleInvoiceMsg, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_SettleInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesSettleInvoiceCall

}

internal extension Invoicesrpc_InvoicesService {
  /// Asynchronous. Server-streaming.
  func subscribeSingleInvoice(_ request: Invoicesrpc_SubscribeSingleInvoiceRequest, completion: ((CallResult) -> Void)?) throws -> Invoicesrpc_InvoicesSubscribeSingleInvoiceCall {
    return try self.subscribeSingleInvoice(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func cancelInvoice(_ request: Invoicesrpc_CancelInvoiceMsg, completion: @escaping (Invoicesrpc_CancelInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesCancelInvoiceCall {
    return try self.cancelInvoice(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func addHoldInvoice(_ request: Invoicesrpc_AddHoldInvoiceRequest, completion: @escaping (Invoicesrpc_AddHoldInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesAddHoldInvoiceCall {
    return try self.addHoldInvoice(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func settleInvoice(_ request: Invoicesrpc_SettleInvoiceMsg, completion: @escaping (Invoicesrpc_SettleInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesSettleInvoiceCall {
    return try self.settleInvoice(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Invoicesrpc_InvoicesServiceClient: ServiceClientBase, Invoicesrpc_InvoicesService {
  /// Asynchronous. Server-streaming.
  /// Send the initial message.
  /// Use methods on the returned object to get streamed responses.
  internal func subscribeSingleInvoice(_ request: Invoicesrpc_SubscribeSingleInvoiceRequest, metadata customMetadata: Metadata, completion: ((CallResult) -> Void)?) throws -> Invoicesrpc_InvoicesSubscribeSingleInvoiceCall {
    return try Invoicesrpc_InvoicesSubscribeSingleInvoiceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func cancelInvoice(_ request: Invoicesrpc_CancelInvoiceMsg, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_CancelInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesCancelInvoiceCall {
    return try Invoicesrpc_InvoicesCancelInvoiceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func addHoldInvoice(_ request: Invoicesrpc_AddHoldInvoiceRequest, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_AddHoldInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesAddHoldInvoiceCall {
    return try Invoicesrpc_InvoicesAddHoldInvoiceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func settleInvoice(_ request: Invoicesrpc_SettleInvoiceMsg, metadata customMetadata: Metadata, completion: @escaping (Invoicesrpc_SettleInvoiceResp?, CallResult) -> Void) throws -> Invoicesrpc_InvoicesSettleInvoiceCall {
    return try Invoicesrpc_InvoicesSettleInvoiceCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

