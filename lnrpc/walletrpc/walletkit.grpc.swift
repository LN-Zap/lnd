//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: walletrpc/walletkit.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Walletrpc_WalletKitDeriveNextKeyCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitDeriveNextKeyCallBase: ClientCallUnaryBase<Walletrpc_KeyReq, Signrpc_KeyDescriptor>, Walletrpc_WalletKitDeriveNextKeyCall {
  override class var method: String { return "/walletrpc.WalletKit/DeriveNextKey" }
}

internal protocol Walletrpc_WalletKitDeriveKeyCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitDeriveKeyCallBase: ClientCallUnaryBase<Signrpc_KeyLocator, Signrpc_KeyDescriptor>, Walletrpc_WalletKitDeriveKeyCall {
  override class var method: String { return "/walletrpc.WalletKit/DeriveKey" }
}

internal protocol Walletrpc_WalletKitNextAddrCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitNextAddrCallBase: ClientCallUnaryBase<Walletrpc_AddrRequest, Walletrpc_AddrResponse>, Walletrpc_WalletKitNextAddrCall {
  override class var method: String { return "/walletrpc.WalletKit/NextAddr" }
}

internal protocol Walletrpc_WalletKitPublishTransactionCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitPublishTransactionCallBase: ClientCallUnaryBase<Walletrpc_Transaction, Walletrpc_PublishResponse>, Walletrpc_WalletKitPublishTransactionCall {
  override class var method: String { return "/walletrpc.WalletKit/PublishTransaction" }
}

internal protocol Walletrpc_WalletKitSendOutputsCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitSendOutputsCallBase: ClientCallUnaryBase<Walletrpc_SendOutputsRequest, Walletrpc_SendOutputsResponse>, Walletrpc_WalletKitSendOutputsCall {
  override class var method: String { return "/walletrpc.WalletKit/SendOutputs" }
}

internal protocol Walletrpc_WalletKitEstimateFeeCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitEstimateFeeCallBase: ClientCallUnaryBase<Walletrpc_EstimateFeeRequest, Walletrpc_EstimateFeeResponse>, Walletrpc_WalletKitEstimateFeeCall {
  override class var method: String { return "/walletrpc.WalletKit/EstimateFee" }
}

internal protocol Walletrpc_WalletKitPendingSweepsCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitPendingSweepsCallBase: ClientCallUnaryBase<Walletrpc_PendingSweepsRequest, Walletrpc_PendingSweepsResponse>, Walletrpc_WalletKitPendingSweepsCall {
  override class var method: String { return "/walletrpc.WalletKit/PendingSweeps" }
}

internal protocol Walletrpc_WalletKitBumpFeeCall: ClientCallUnary {}

fileprivate final class Walletrpc_WalletKitBumpFeeCallBase: ClientCallUnaryBase<Walletrpc_BumpFeeRequest, Walletrpc_BumpFeeResponse>, Walletrpc_WalletKitBumpFeeCall {
  override class var method: String { return "/walletrpc.WalletKit/BumpFee" }
}


/// Instantiate Walletrpc_WalletKitServiceClient, then call methods of this protocol to make API calls.
internal protocol Walletrpc_WalletKitService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func deriveNextKey(_ request: Walletrpc_KeyReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveNextKeyCall

  /// Asynchronous. Unary.
  @discardableResult
  func deriveKey(_ request: Signrpc_KeyLocator, metadata customMetadata: Metadata, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveKeyCall

  /// Asynchronous. Unary.
  @discardableResult
  func nextAddr(_ request: Walletrpc_AddrRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_AddrResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitNextAddrCall

  /// Asynchronous. Unary.
  @discardableResult
  func publishTransaction(_ request: Walletrpc_Transaction, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_PublishResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPublishTransactionCall

  /// Asynchronous. Unary.
  @discardableResult
  func sendOutputs(_ request: Walletrpc_SendOutputsRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_SendOutputsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitSendOutputsCall

  /// Asynchronous. Unary.
  @discardableResult
  func estimateFee(_ request: Walletrpc_EstimateFeeRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_EstimateFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitEstimateFeeCall

  /// Asynchronous. Unary.
  @discardableResult
  func pendingSweeps(_ request: Walletrpc_PendingSweepsRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_PendingSweepsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPendingSweepsCall

  /// Asynchronous. Unary.
  @discardableResult
  func bumpFee(_ request: Walletrpc_BumpFeeRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_BumpFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitBumpFeeCall

}

internal extension Walletrpc_WalletKitService {
  /// Asynchronous. Unary.
  @discardableResult
  func deriveNextKey(_ request: Walletrpc_KeyReq, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveNextKeyCall {
    return try self.deriveNextKey(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func deriveKey(_ request: Signrpc_KeyLocator, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveKeyCall {
    return try self.deriveKey(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func nextAddr(_ request: Walletrpc_AddrRequest, completion: @escaping (Walletrpc_AddrResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitNextAddrCall {
    return try self.nextAddr(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func publishTransaction(_ request: Walletrpc_Transaction, completion: @escaping (Walletrpc_PublishResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPublishTransactionCall {
    return try self.publishTransaction(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func sendOutputs(_ request: Walletrpc_SendOutputsRequest, completion: @escaping (Walletrpc_SendOutputsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitSendOutputsCall {
    return try self.sendOutputs(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func estimateFee(_ request: Walletrpc_EstimateFeeRequest, completion: @escaping (Walletrpc_EstimateFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitEstimateFeeCall {
    return try self.estimateFee(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func pendingSweeps(_ request: Walletrpc_PendingSweepsRequest, completion: @escaping (Walletrpc_PendingSweepsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPendingSweepsCall {
    return try self.pendingSweeps(request, metadata: self.metadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  func bumpFee(_ request: Walletrpc_BumpFeeRequest, completion: @escaping (Walletrpc_BumpFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitBumpFeeCall {
    return try self.bumpFee(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Walletrpc_WalletKitServiceClient: ServiceClientBase, Walletrpc_WalletKitService {
  /// Asynchronous. Unary.
  @discardableResult
  internal func deriveNextKey(_ request: Walletrpc_KeyReq, metadata customMetadata: Metadata, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveNextKeyCall {
    return try Walletrpc_WalletKitDeriveNextKeyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func deriveKey(_ request: Signrpc_KeyLocator, metadata customMetadata: Metadata, completion: @escaping (Signrpc_KeyDescriptor?, CallResult) -> Void) throws -> Walletrpc_WalletKitDeriveKeyCall {
    return try Walletrpc_WalletKitDeriveKeyCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func nextAddr(_ request: Walletrpc_AddrRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_AddrResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitNextAddrCall {
    return try Walletrpc_WalletKitNextAddrCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func publishTransaction(_ request: Walletrpc_Transaction, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_PublishResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPublishTransactionCall {
    return try Walletrpc_WalletKitPublishTransactionCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func sendOutputs(_ request: Walletrpc_SendOutputsRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_SendOutputsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitSendOutputsCall {
    return try Walletrpc_WalletKitSendOutputsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func estimateFee(_ request: Walletrpc_EstimateFeeRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_EstimateFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitEstimateFeeCall {
    return try Walletrpc_WalletKitEstimateFeeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func pendingSweeps(_ request: Walletrpc_PendingSweepsRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_PendingSweepsResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitPendingSweepsCall {
    return try Walletrpc_WalletKitPendingSweepsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Asynchronous. Unary.
  @discardableResult
  internal func bumpFee(_ request: Walletrpc_BumpFeeRequest, metadata customMetadata: Metadata, completion: @escaping (Walletrpc_BumpFeeResponse?, CallResult) -> Void) throws -> Walletrpc_WalletKitBumpFeeCall {
    return try Walletrpc_WalletKitBumpFeeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

