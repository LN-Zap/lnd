//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: watchtowerrpc/watchtower.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Watchtowerrpc_WatchtowerGetInfoCall: ClientCallUnary {}

fileprivate final class Watchtowerrpc_WatchtowerGetInfoCallBase: ClientCallUnaryBase<Watchtowerrpc_GetInfoRequest, Watchtowerrpc_GetInfoResponse>, Watchtowerrpc_WatchtowerGetInfoCall {
  override class var method: String { return "/watchtowerrpc.Watchtower/GetInfo" }
}


/// Instantiate Watchtowerrpc_WatchtowerServiceClient, then call methods of this protocol to make API calls.
internal protocol Watchtowerrpc_WatchtowerService: ServiceClient {
  /// Asynchronous. Unary.
  @discardableResult
  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, metadata customMetadata: Metadata, completion: @escaping (Watchtowerrpc_GetInfoResponse?, CallResult) -> Void) throws -> Watchtowerrpc_WatchtowerGetInfoCall

}

internal extension Watchtowerrpc_WatchtowerService {
  /// Asynchronous. Unary.
  @discardableResult
  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, completion: @escaping (Watchtowerrpc_GetInfoResponse?, CallResult) -> Void) throws -> Watchtowerrpc_WatchtowerGetInfoCall {
    return try self.getInfo(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Watchtowerrpc_WatchtowerServiceClient: ServiceClientBase, Watchtowerrpc_WatchtowerService {
  /// Asynchronous. Unary.
  @discardableResult
  internal func getInfo(_ request: Watchtowerrpc_GetInfoRequest, metadata customMetadata: Metadata, completion: @escaping (Watchtowerrpc_GetInfoResponse?, CallResult) -> Void) throws -> Watchtowerrpc_WatchtowerGetInfoCall {
    return try Watchtowerrpc_WatchtowerGetInfoCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

