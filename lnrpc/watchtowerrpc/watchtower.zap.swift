//
// DO NOT EDIT.
//
// Generated by `protoc-gen-zap`.
// Source: watchtowerrpc/watchtower.proto
//

#if !REMOTEONLY
import Lndmobile
#endif
import Logger

// MARK: - Watchtower
protocol WatchtowerConnection {
  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, completion: @escaping ApiCompletion<Watchtowerrpc_GetInfoResponse>)
}

#if !REMOTEONLY
class StreamingWatchtowerConnection: WatchtowerConnection {
  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, completion: @escaping ApiCompletion<Watchtowerrpc_GetInfoResponse>) {
    LndmobileGetInfo(try? request.serializedData(), LndCallback(completion))
  }
}
#endif

final class RPCWatchtowerConnection: WatchtowerConnection {
  let service: Watchtowerrpc_WatchtowerService
      
  public init(configuration: RPCCredentials) {
      service = Watchtowerrpc_WatchtowerServiceClient(configuration: configuration)
  }

  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, completion: @escaping ApiCompletion<Watchtowerrpc_GetInfoResponse>) {
    _ = try? service.getInfo(request, completion: createHandler(completion))
  }

}

class MockWatchtowerConnection: WatchtowerConnection {
  private let getInfo: Watchtowerrpc_GetInfoResponse?

  init(
    getInfo: Watchtowerrpc_GetInfoResponse? = nil
  ) {
    self.getInfo = getInfo
  }
  func getInfo(_ request: Watchtowerrpc_GetInfoRequest, completion: @escaping ApiCompletion<Watchtowerrpc_GetInfoResponse>) {
    completion(Result(value: getInfo, error: LndApiError.unknownError))
  }
}
